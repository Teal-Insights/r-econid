[{"path":"https://teal-insights.github.io/r-econid/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Teal Insights Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://teal-insights.github.io/r-econid/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Teal Insights. Author, maintainer, copyright holder.","code":""},{"path":"https://teal-insights.github.io/r-econid/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Teal Insights (2025). econid: Standardized Geography Economists. R package version 0.0.1.9003, https://github.com/Teal-Insights/r-econid, https://teal-insights.github.io/r-econid.","code":"@Manual{,   title = {econid: Standardized Geography for Economists},   author = {{Teal Insights}},   year = {2025},   note = {R package version 0.0.1.9003, https://github.com/Teal-Insights/r-econid},   url = {https://teal-insights.github.io/r-econid}, }"},{"path":[]},{"path":"https://teal-insights.github.io/r-econid/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Standardized Geography for Economists","text":"econid R package foundational building block econdataverse family packages aimed helping economists financial professionals work sovereign-level economic data. package aimed domain experts economics finance need analyze join data across multiple sources, aren’t necessarily R programming experts.","code":""},{"path":"https://teal-insights.github.io/r-econid/index.html","id":"motivation","dir":"","previous_headings":"","what":"Motivation","title":"Standardized Geography for Economists","text":"Economic financial datasets present unique challenges working country-level data: Mixed Entity Types Datasets often combine different types entities “country” column: Countries sovereign states Territories administrative regions (e.g., Puerto Rico, Hong Kong) Geographic economic aggregates (e.g., “Sub-Saharan Africa”, “Low Income Countries”) International institutions (e.g., “World Bank”, “IMF”) Inconsistent Naming entity might appear various formats: Different codes (ISO-2, ISO-3, numeric codes) Various name formats (e.g., “United States”, “US”, “U.S..”) Historical names non-English variants Complex Analysis Needs Researchers often need : Compare individual countries regional aggregates (e.g., Nigeria vs. Sub-Saharan Africa) Join data across datasets different naming conventions Handle ambiguous cases (e.g., “Congo” refer multiple countries) Work specialized entities standard ISO lists econid addresses challenges : Robust name standardization clear entity type identification Flexible customization options special cases Warning systems missing ambiguous matches Tools fuzzy searching, filtering, joining across datasets","code":""},{"path":"https://teal-insights.github.io/r-econid/index.html","id":"design-philosophy","dir":"","previous_headings":"","what":"Design Philosophy","title":"Standardized Geography for Economists","text":"design philosophy package follows tidyverse principles tidy tools manifesto. strive practice human-centered design, clear documentation examples graceful handling edge cases. invite submit suggestions improvements extensions package’s Github Issues page. designed package handle common entities financial economic professionals might encounter dataset (249 total), handle every edge case. However, package allows users extend standardization list custom entities flexibly accommodate unconventional use case.","code":""},{"path":"https://teal-insights.github.io/r-econid/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Standardized Geography for Economists","text":"package published CRAN, can install GitHub using remotes package. , load package R session Quarto RMarkdown notebook:","code":"remotes::install_github(\"Teal-Insights/r-econid\") library(econid)"},{"path":"https://teal-insights.github.io/r-econid/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Standardized Geography for Economists","text":"high-level overview econid works practice, followed detailed description main function parameters. examples tests illustrate typical usage patterns.","code":""},{"path":"https://teal-insights.github.io/r-econid/index.html","id":"package-summary","dir":"","previous_headings":"Usage","what":"Package Summary","title":"Standardized Geography for Economists","text":"Input validation package checks input dataset specified columns exist. also ensures request valid output columns (e.g., \"entity_name\", \"entity_id\", \"entity_type\", \"iso2c\", \"iso3c\"). invalid columns raise error. Name code matching function standardize_entities() looks dataset names (optionally codes) might match entity. : Converts names UTF-8 consistent processing. Calls internal functions try matching entry via case-insensitive regex patterns. code column name column provided, attempts match merges results (favoring first match). multiple matches exist single row, warning raised (unless suppressed). Merging standardized columns function finds match, returns new augmented data frame standardized columns (e.g., \"entity_id\", \"entity_name\", \"entity_type\", etc.). control exactly standardized columns appear via output_cols argument. Handling missing custom cases Custom entities can added using add_entity_pattern() standardization entity matched, retains original input name \"entity_name\" column (requested) shows NA \"entity_id\". can optionally specify default entity type unmatched entries (default_entity_type). Warnings issued ambiguous incomplete matches warn_ambiguous TRUE.","code":""},{"path":"https://teal-insights.github.io/r-econid/index.html","id":"program-flow","dir":"","previous_headings":"Usage","what":"Program Flow","title":"Standardized Geography for Economists","text":"","code":"flowchart TD     A[standardize_entities] --> B[Validate Inputs]     B --> C[Convert name column to UTF-8]     C --> D[For each row: try_regex_match]     D --> E[Possible Multiple or No Matches]     E -->|Multiple| F[Warn if warn_ambiguous=TRUE]     E -->|Single Match or None| G[Assign entity_id]     F --> G     G --> H[Join with list_entity_patterns]     H --> I[Replace NAs in entity_name, entity_id,<br/>and entity_type if needed]     I --> J[Return Final Data Frame<br/>with Requested output_cols]"},{"path":"https://teal-insights.github.io/r-econid/index.html","id":"standardize_entities-function","dir":"","previous_headings":"Usage","what":"standardize_entities() Function","title":"Standardized Geography for Economists","text":"","code":"df <- data.frame(entity = c(\"United States\", \"China\", \"NotACountry\"), code = c(\"USA\", \"CHN\", \"ZZZ\"), obs_value = c(1, 2, 3))  standardize_entities(   data = df,   name_col = entity,   code_col = code,   output_cols = c(\"entity_id\", \"entity_name\", \"entity_type\"),   default_entity_type = NA_character_,   warn_ambiguous = TRUE ) ##   entity_id   entity_name entity_type        entity code obs_value ## 1       USA United States     economy United States  USA         1 ## 2       CHN         China     economy         China  CHN         2 ## 3       ZZZ   NotACountry        <NA>   NotACountry  ZZZ         3"},{"path":"https://teal-insights.github.io/r-econid/index.html","id":"parameters","dir":"","previous_headings":"Usage > standardize_entities() Function","what":"Parameters","title":"Standardized Geography for Economists","text":"data data frame (tibble) containing entities standardized. name_col unquoted quoted name column data contains entity names standardized. code_col (optional) additional column name might contain ISO custom codes. present, function attempts match code name. match, warning ambiguity issued. output_cols (optional) character vector columns include final output. Valid options: \"entity_id\" \"entity_name\" \"entity_type\" \"iso3c\" \"iso2c\" Defaults c(\"entity_id\", \"entity_name\", \"entity_type\"). default_entity_type (optional) character scalar (\"economy\", \"organization\", \"aggregate\", \"\") assign entity type match found. value applies \"entity_type\" requested output_cols. four valid values selected cover common economic use cases: \"economy\": legal quasi-legal jurisdiction country autonomous region (e.g., “United States”, “Democratic Autonomous Administration North East Syria”) \"organization\": institution organization bank international agency (e.g., “World Bank”, “IMF”) \"aggregate\": geographic economic aggregate region development group (e.g., “Sub-Saharan Africa”, “Low Income Countries”) \"\": Anything doesn’t fit categories (e.g., “Elon Musk”, “Moon”) warn_ambiguous (optional) logical indicating whether warn single row data can match one entity. Defaults TRUE.","code":""},{"path":"https://teal-insights.github.io/r-econid/index.html","id":"returns","dir":"","previous_headings":"Usage > standardize_entities() Function","what":"Returns","title":"Standardized Geography for Economists","text":"data frame (tibble) size data, augmented (merged) requested standardized columns.","code":""},{"path":"https://teal-insights.github.io/r-econid/index.html","id":"add_entity_pattern-function","dir":"","previous_headings":"Usage","what":"add_entity_pattern() Function","title":"Standardized Geography for Economists","text":"add_entity_pattern() function allows add custom entity patterns package. useful need standardize entities default list. Use patterns explore package integrate data cleaning workflows. finer-grained operations (e.g., fuzzy matching custom expansions), keep eye package roadmap future enhancements. welcome feedback contributions!","code":"add_entity_pattern(   \"BJ-CITY\",   \"Beijing City\",   entity_type = \"economy\",   aliases = c(\"Beijing Municipality\") )  df_custom <- data.frame(entity = c(\"United States\", \"Beijing Municipality\")) result_custom <- standardize_entities(df_custom, name_col = entity) print(result_custom) ##   entity_id   entity_name entity_type               entity ## 1       USA United States     economy        United States ## 2   BJ-CITY  Beijing City     economy Beijing Municipality"},{"path":"https://teal-insights.github.io/r-econid/reference/add_entity_pattern.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a custom entity pattern — add_entity_pattern","title":"Add a custom entity pattern — add_entity_pattern","text":"function allows users extend default entity patterns custom entry.","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/add_entity_pattern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a custom entity pattern — add_entity_pattern","text":"","code":"add_entity_pattern(   entity_id,   entity_name,   entity_type,   aliases = NULL,   entity_regex = NULL )"},{"path":"https://teal-insights.github.io/r-econid/reference/add_entity_pattern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a custom entity pattern — add_entity_pattern","text":"entity_id unique identifier entity. entity_name standard (canonical) name entity. entity_type character string describing type entity (\"economy\", \"organization\", \"aggregate\", \"\"). aliases optional character vector alternative names identifying entity. provided, automatically combined (using pipe operator, \"|\") entity_name entity_id construct regular expression pattern. entity_regex optional custom regular expression pattern. supplied, overrides regex automatically constructed aliases.","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/add_entity_pattern.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a custom entity pattern — add_entity_pattern","text":"NULL. side effect function, custom pattern stored internal tibble current session.","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/add_entity_pattern.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a custom entity pattern — add_entity_pattern","text":"Custom entity patterns can added top script (interactively) appended built-patterns using list_entity_patterns(). makes possible users register alternative names (aliases) entities might appear economic datasets. custom entity patterns kept separately appended default patterns retrieving entity_patterns via list_entity_patterns(). custom patterns persist length R session.","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/add_entity_pattern.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a custom entity pattern — add_entity_pattern","text":"","code":"if (FALSE) { # \\dontrun{   add_entity_pattern(\"EU\", \"European Union\", aliases = c(\"Europe\"))   patterns <- list_entity_patterns() } # }"},{"path":"https://teal-insights.github.io/r-econid/reference/create_entity_regex.html","id":null,"dir":"Reference","previous_headings":"","what":"Create entity Name Regex Pattern — create_entity_regex","title":"Create entity Name Regex Pattern — create_entity_regex","text":"Creates regular expression pattern one entity names, following standardized rules flexible matching. function converts input name lowercase, escapes special regex characters, replaces spaces flexible whitespace pattern (.?). individual patterns joined pipe operator (|) produce regex matches supplied names.","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/create_entity_regex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create entity Name Regex Pattern — create_entity_regex","text":"","code":"create_entity_regex(names)"},{"path":"https://teal-insights.github.io/r-econid/reference/create_entity_regex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create entity Name Regex Pattern — create_entity_regex","text":"names character vector entity names.","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/create_entity_regex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create entity Name Regex Pattern — create_entity_regex","text":"character string containing combined regex pattern.","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/entity_patterns.html","id":null,"dir":"Reference","previous_headings":"","what":"Entity Patterns — entity_patterns","title":"Entity Patterns — entity_patterns","text":"dataset containing patterns matching entity names. dataset accessible list_entity_patterns.","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/entity_patterns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Entity Patterns — entity_patterns","text":"","code":"entity_patterns"},{"path":"https://teal-insights.github.io/r-econid/reference/entity_patterns.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Entity Patterns — entity_patterns","text":"data frame following columns: entity_id Unique identifier entity entity_name entity name iso3c ISO 3166-1 alpha-3 code iso2c ISO 3166-1 alpha-2 code entity_type Type entity (\"economy\", \"organization\", \"aggregate\", \"\") entity_regex Regular expression pattern matching entity names","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/entity_patterns.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Entity Patterns — entity_patterns","text":"Data manually prepared Teal L. Emery","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/list_entity_patterns.html","id":null,"dir":"Reference","previous_headings":"","what":"List entity patterns — list_entity_patterns","title":"List entity patterns — list_entity_patterns","text":"function returns tibble containing regular expression patterns identifying economic indicators. combines patterns built-entity_patterns dataset custom patterns stored .econid_env environment.","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/list_entity_patterns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List entity patterns — list_entity_patterns","text":"","code":"list_entity_patterns()"},{"path":"https://teal-insights.github.io/r-econid/reference/list_entity_patterns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List entity patterns — list_entity_patterns","text":"data frame following columns: entity_name entity name entity_regex Regular expression pattern matching entity names iso2c ISO 3166-1 alpha-2 code iso3c ISO 3166-1 alpha-3 code","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/list_entity_patterns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List entity patterns — list_entity_patterns","text":"","code":"patterns <- list_entity_patterns()"},{"path":"https://teal-insights.github.io/r-econid/reference/match_entity_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Match entity Ids — match_entity_ids","title":"Match entity Ids — match_entity_ids","text":"Given vectors names codes, match list patterns return vector entity ids.","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/match_entity_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match entity Ids — match_entity_ids","text":"","code":"match_entity_ids(names, codes = NULL, warn_ambiguous = TRUE)"},{"path":"https://teal-insights.github.io/r-econid/reference/match_entity_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match entity Ids — match_entity_ids","text":"names Character vector entity names standardize codes Optional character vector entity codes warn_ambiguous Logical; whether warn ambiguous matches","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/match_entity_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match entity Ids — match_entity_ids","text":"vector entity ids","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/standardize_entities.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize entity Names and Codes — standardize_entities","title":"Standardize entity Names and Codes — standardize_entities","text":"Standardizes entity names codes dataset matching predefined list patterns ISO codes. Handles aggregate entities.","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/standardize_entities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardize entity Names and Codes — standardize_entities","text":"","code":"standardize_entities(   data,   name_col,   code_col = NULL,   output_cols = c(\"entity_id\", \"entity_name\", \"entity_type\"),   default_entity_type = NA_character_,   warn_ambiguous = TRUE,   overwrite = TRUE,   warn_overwrite = TRUE )"},{"path":"https://teal-insights.github.io/r-econid/reference/standardize_entities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize entity Names and Codes — standardize_entities","text":"data data frame tibble containing entity names standardize name_col Name column containing entity names code_col Optional name column containing entity codes output_cols Character vector specifying desired output columns. Options \"entity_name\", \"entity_id\", \"entity_type\", \"iso3c\", \"iso2c\". Defaults c(\"entity_id\", \"entity_name\", \"entity_type\"). default_entity_type Character; default entity type use entities match patterns. Options \"economy\", \"organization\", \"aggregate\", \"\". argument supplied, default value NA_character_. Argument ignored output_cols include \"entity_type\". warn_ambiguous Logical; whether warn ambiguous matches overwrite Logical; whether overwrite existing entity_* columns warn_overwrite Logical; whether warn overwriting existing entity_* columns. Defaults TRUE.","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/standardize_entities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardize entity Names and Codes — standardize_entities","text":"data frame standardized entity information merged input data","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/standardize_entities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardize entity Names and Codes — standardize_entities","text":"","code":"if (FALSE) { # \\dontrun{ df <- data.frame(entity = c(\"United States\", \"China\")) standardize_entity(df, name_col = entity) } # }"},{"path":"https://teal-insights.github.io/r-econid/reference/try_regex_match.html","id":null,"dir":"Reference","previous_headings":"","what":"Try Regex Pattern Match — try_regex_match","title":"Try Regex Pattern Match — try_regex_match","text":"Attempts match string return matching entity_id(s) using regex patterns entity_patterns.","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/try_regex_match.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Try Regex Pattern Match — try_regex_match","text":"","code":"try_regex_match(name)"},{"path":"https://teal-insights.github.io/r-econid/reference/try_regex_match.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Try Regex Pattern Match — try_regex_match","text":"name Character string entity name code","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/try_regex_match.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Try Regex Pattern Match — try_regex_match","text":"Character vector entity_ids","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/validate_entity_inputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate inputs for entity standardization — validate_entity_inputs","title":"Validate inputs for entity standardization — validate_entity_inputs","text":"Validates input data frame column names entity standardization.","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/validate_entity_inputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate inputs for entity standardization — validate_entity_inputs","text":"","code":"validate_entity_inputs(data, name_col_name, code_col_name, output_cols)"},{"path":"https://teal-insights.github.io/r-econid/reference/validate_entity_inputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate inputs for entity standardization — validate_entity_inputs","text":"data data frame tibble validate name_col_name Name column containing entity names code_col_name Optional name column containing entity codes output_cols Character vector requested output columns","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/validate_entity_inputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate inputs for entity standardization — validate_entity_inputs","text":"List containing validated output_cols final_cols","code":""}]
