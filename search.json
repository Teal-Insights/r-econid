[{"path":"https://teal-insights.github.io/r-econid/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Teal Insights Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://teal-insights.github.io/r-econid/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Teal Insights. Author, maintainer, copyright holder.","code":""},{"path":"https://teal-insights.github.io/r-econid/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Teal Insights (2025). econid: Standardized Geography Economists. R package version 0.0.0.2, https://github.com/Teal-Insights/r-econid, https://teal-insights.github.io/r-econid.","code":"@Manual{,   title = {econid: Standardized Geography for Economists},   author = {{Teal Insights}},   year = {2025},   note = {R package version 0.0.0.2, https://github.com/Teal-Insights/r-econid},   url = {https://teal-insights.github.io/r-econid}, }"},{"path":[]},{"path":"https://teal-insights.github.io/r-econid/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Standardized Geography for Economists","text":"econid R package foundational building block econdataverse family packages aimed helping economists financial professionals work sovereign-level economic data. package aimed domain experts economics finance need analyze join data across multiple sources, aren’t necessarily R programming experts.","code":""},{"path":"https://teal-insights.github.io/r-econid/index.html","id":"motivation","dir":"","previous_headings":"","what":"Motivation","title":"Standardized Geography for Economists","text":"Economic financial datasets present unique challenges working country-level data: Mixed Entity Types Datasets often combine different types entities “country” column: Countries sovereign states Territories administrative regions (e.g., Puerto Rico, Hong Kong) Geographic economic aggregates (e.g., “Sub-Saharan Africa”, “Low Income Countries”) International institutions (e.g., “World Bank”, “IMF”) Inconsistent Naming entity might appear various formats: Different codes (ISO-2, ISO-3, numeric codes) Various name formats (e.g., “United States”, “US”, “U.S..”) Historical names non-English variants Complex Analysis Needs Researchers often need : Compare individual countries regional aggregates (e.g., Nigeria vs. Sub-Saharan Africa) Join data across datasets different naming conventions Handle ambiguous cases (e.g., “Congo” refer multiple countries) Work specialized entities standard ISO lists econid addresses challenges : Robust name standardization clear entity type identification Flexible customization options special cases Warning systems missing ambiguous matches Tools fuzzy searching, filtering, joining across datasets","code":""},{"path":"https://teal-insights.github.io/r-econid/index.html","id":"design-philosophy","dir":"","previous_headings":"","what":"Design Philosophy","title":"Standardized Geography for Economists","text":"design philosophy package follows tidyverse principles tidy tools manifesto. strive practice human-centered design, clear documentation examples graceful handling edge cases. invite submit suggestions improvements extensions package’s Github Issues page. designed package handle common entities financial economic professionals might encounter dataset (249 total), handle every edge case. However, package allows users extend standardization list custom entities flexibly accommodate unconventional use case.","code":""},{"path":"https://teal-insights.github.io/r-econid/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Standardized Geography for Economists","text":"package published CRAN, can install GitHub using remotes package. , load package R session Quarto RMarkdown notebook:","code":"remotes::install_github(\"Teal-Insights/r-econid\") library(econid)"},{"path":"https://teal-insights.github.io/r-econid/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Standardized Geography for Economists","text":"high-level overview econid works practice, followed detailed description main function parameters. examples tests illustrate typical usage patterns.","code":""},{"path":"https://teal-insights.github.io/r-econid/index.html","id":"summation","dir":"","previous_headings":"Usage","what":"Summation","title":"Standardized Geography for Economists","text":"Input validation package checks input dataset specified columns exist. also ensures request valid output columns (e.g., \"economy_name\", \"economy_id\", \"economy_type\", \"iso2c\", \"iso3c\"). invalid columns raise error. Name code matching function standardize_economies() looks dataset names (optionally codes) might match economy. : Converts names UTF-8 consistent processing. Calls internal functions try matching entry via case-insensitive regex patterns. code column name column provided, attempts match merges results (favoring first match). multiple matches exist single row, warning raised (unless suppressed). Merging standardized columns function finds match, returns new augmented data frame standardized columns (e.g., \"economy_id\", \"economy_name\", \"economy_type\", etc.). control exactly standardized columns appear via output_cols argument. Handling missing custom cases economy matched, retains original input name \"economy_name\" column (requested) shows NA \"economy_id\". can optionally specify default economy type unmatched entries (default_economy_type). Warnings issued ambiguous incomplete matches warn_ambiguous TRUE.","code":""},{"path":"https://teal-insights.github.io/r-econid/index.html","id":"program-flow","dir":"","previous_headings":"Usage","what":"Program Flow","title":"Standardized Geography for Economists","text":"","code":"flowchart TD     A[standardize_economies] --> B[Validate Inputs]     B --> C[Convert name column to UTF-8]     C --> D[For each row: try_regex_match]     D --> E[Possible Multiple or No Matches]     E -->|Multiple| F[Warn if warn_ambiguous=TRUE]     E -->|Single Match or None| G[Assign economy_id]     F --> G     G --> H[Join with list_economy_patterns]     H --> I[Replace NAs in economy_name, economy_id,<br/>and economy_type if needed]     I --> J[Return Final Data Frame<br/>with Requested output_cols]"},{"path":"https://teal-insights.github.io/r-econid/index.html","id":"standardize_economies-function","dir":"","previous_headings":"Usage","what":"standardize_economies() Function","title":"Standardized Geography for Economists","text":"","code":"df <- data.frame(economy = c(\"United States\", \"China\", \"NotACountry\"), code = c(\"USA\", \"CHN\", \"ZZZ\"), obs_value = c(1, 2, 3))  standardize_economies(   data = df,   name_col = economy,   code_col = code,   output_cols = c(\"economy_id\", \"economy_name\", \"economy_type\"),   default_economy_type = NA_character_,   warn_ambiguous = TRUE ) ##         economy code obs_value economy_id  economy_name economy_type ## 1 United States  USA         1        USA United States      country ## 2         China  CHN         2        CHN         China      country ## 3   NotACountry  ZZZ         3        ZZZ   NotACountry         <NA>"},{"path":"https://teal-insights.github.io/r-econid/index.html","id":"parameters","dir":"","previous_headings":"Usage > standardize_economies() Function","what":"Parameters","title":"Standardized Geography for Economists","text":"data data frame (tibble) containing economies standardized. name_col unquoted quoted name column data contains country entity names. code_col (optional) additional column name might contain ISO custom codes. present, function attempts match code name. match, warning ambiguity issued. output_cols (optional) character vector columns include final output. Valid options: \"economy_id\" \"economy_name\" \"economy_type\" \"iso3c\" \"iso2c\" Defaults c(\"economy_id\", \"economy_name\", \"economy_type\"). default_economy_type (optional) character scalar (\"country\", \"institution\", \"aggregate\", etc.) assign economy type match found. value applies \"economy_type\" requested output_cols. warn_ambiguous (optional) logical indicating whether warn single row data can match one economy. Defaults TRUE.","code":""},{"path":"https://teal-insights.github.io/r-econid/index.html","id":"returns","dir":"","previous_headings":"Usage > standardize_economies() Function","what":"Returns","title":"Standardized Geography for Economists","text":"data frame (tibble) size data, augmented (merged) requested standardized columns.","code":""},{"path":"https://teal-insights.github.io/r-econid/index.html","id":"examples","dir":"","previous_headings":"Usage","what":"Examples","title":"Standardized Geography for Economists","text":"Use patterns explore package integrate data cleaning workflows. finer-grained operations (e.g., fuzzy matching custom expansions), keep eye package roadmap future enhancements. welcome feedback contributions!","code":"# Specifying a code column and additional output columns df2 <- data.frame(   econ_name = c(\"United States\", \"united.states\", \"Germany\", \"NotInList\"),   econ_code = c(\"USA\", NA, \"DEU\", \"ZZZ\") ) result2 <- standardize_economies(   df2,   name_col = econ_name,   code_col = econ_code,   output_cols = c(\"economy_id\", \"economy_name\", \"iso2c\", \"iso3c\"),   default_economy_type = \"Aggregate\" ) print(result2) ##       econ_name econ_code economy_id  economy_name iso3c iso2c ## 1 United States       USA        USA United States   USA    US ## 2 united.states      <NA>        USA United States   USA    US ## 3       Germany       DEU        DEU       Germany   DEU    DE ## 4     NotInList       ZZZ        ZZZ     NotInList  <NA>  <NA> # Ambiguities and warnings df3 <- data.frame(   name = c(\"USA\", \"France\"),   code = c(\"FRA\", NA) )  result3 <- standardize_economies(df3, name_col = name, code_col = code) ## Warning: There was 1 warning in `dplyr::mutate()`. ## ℹ In argument: `economy_id = match_economy_ids(...)`. ## Caused by warning: ## ! ! Ambiguous match for \"USA\" ## • Matches multiple patterns: FRA, USA"},{"path":"https://teal-insights.github.io/r-econid/index.html","id":"roadmap","dir":"","previous_headings":"","what":"Roadmap","title":"Standardized Geography for Economists","text":"Allow users extend list custom economies Add fuzzy join function Add fuzzy filter function","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/create_economy_regex.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Economy Name Regex Pattern — create_economy_regex","title":"Create Economy Name Regex Pattern — create_economy_regex","text":"Creates regular expression pattern economy name, following standardized rules flexible matching. function converts input name lowercase, escapes special regex characters, replaces spaces flexible whitespace pattern (.?).","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/create_economy_regex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Economy Name Regex Pattern — create_economy_regex","text":"","code":"create_economy_regex(name)"},{"path":"https://teal-insights.github.io/r-econid/reference/create_economy_regex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Economy Name Regex Pattern — create_economy_regex","text":"name Character string containing economy name.","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/create_economy_regex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Economy Name Regex Pattern — create_economy_regex","text":"Character string containing regex pattern.","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/economy_patterns.html","id":null,"dir":"Reference","previous_headings":"","what":"Economy Patterns — economy_patterns","title":"Economy Patterns — economy_patterns","text":"dataset containing patterns matching economy names. dataset accessible list_economy_patterns.","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/economy_patterns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Economy Patterns — economy_patterns","text":"","code":"economy_patterns"},{"path":"https://teal-insights.github.io/r-econid/reference/economy_patterns.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Economy Patterns — economy_patterns","text":"data frame following columns: economy_id Unique identifier economy economy_name Economy name iso3c ISO 3166-1 alpha-3 code iso2c ISO 3166-1 alpha-2 code economy_type Type economy (e.g., \"country\") economy_regex Regular expression pattern matching economy names","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/economy_patterns.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Economy Patterns — economy_patterns","text":"Data manually prepared Teal L. Emery","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/list_economy_patterns.html","id":null,"dir":"Reference","previous_headings":"","what":"List economy patterns — list_economy_patterns","title":"List economy patterns — list_economy_patterns","text":"function returns tibble containing regular expression patterns identifying economic indicators.","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/list_economy_patterns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List economy patterns — list_economy_patterns","text":"","code":"list_economy_patterns()"},{"path":"https://teal-insights.github.io/r-econid/reference/list_economy_patterns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List economy patterns — list_economy_patterns","text":"data frame following columns: economy_name Economy name economy_regex Regular expression pattern matching economy names iso2c ISO 3166-1 alpha-2 code iso3c ISO 3166-1 alpha-3 code","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/list_economy_patterns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List economy patterns — list_economy_patterns","text":"","code":"patterns <- list_economy_patterns()"},{"path":"https://teal-insights.github.io/r-econid/reference/match_economy_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Match Economy Ids — match_economy_ids","title":"Match Economy Ids — match_economy_ids","text":"Given vectors names codes, match list patterns return vector economy ids.","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/match_economy_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match Economy Ids — match_economy_ids","text":"","code":"match_economy_ids(names, codes = NULL, warn_ambiguous = TRUE)"},{"path":"https://teal-insights.github.io/r-econid/reference/match_economy_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match Economy Ids — match_economy_ids","text":"names Character vector economy names standardize codes Optional character vector economy codes warn_ambiguous Logical; whether warn ambiguous matches","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/match_economy_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match Economy Ids — match_economy_ids","text":"vector economy ids","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/standardize_economies.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize Economy Names and Codes — standardize_economies","title":"Standardize Economy Names and Codes — standardize_economies","text":"Standardizes economy names codes dataset matching predefined list patterns ISO codes. Handles aggregate economies.","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/standardize_economies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardize Economy Names and Codes — standardize_economies","text":"","code":"standardize_economies(   data,   name_col,   code_col = NULL,   output_cols = c(\"economy_id\", \"economy_name\", \"economy_type\"),   default_economy_type = NA_character_,   warn_ambiguous = TRUE )"},{"path":"https://teal-insights.github.io/r-econid/reference/standardize_economies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize Economy Names and Codes — standardize_economies","text":"data data frame tibble containing economy names standardize name_col Name column containing economy names code_col Optional name column containing economy codes output_cols Character vector specifying desired output columns. Options \"economy_name\", \"economy_id\", \"economy_type\", \"iso3c\", \"iso2c\" default_economy_type Character; default economy type use specified data. Options \"country\", \"institution\", \"aggregate\". Defaults NA. ignored output_cols include \"economy_type\". warn_ambiguous Logical; whether warn ambiguous matches","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/standardize_economies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardize Economy Names and Codes — standardize_economies","text":"data frame standardized economy information merged input data","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/standardize_economies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardize Economy Names and Codes — standardize_economies","text":"","code":"if (FALSE) { # \\dontrun{ df <- data.frame(economy = c(\"United States\", \"China\")) standardize_economy(df, name_col = economy) } # }"},{"path":"https://teal-insights.github.io/r-econid/reference/try_regex_match.html","id":null,"dir":"Reference","previous_headings":"","what":"Try Regex Pattern Match — try_regex_match","title":"Try Regex Pattern Match — try_regex_match","text":"Attempts match string return matching economy_id(s) using regex patterns economy_patterns.","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/try_regex_match.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Try Regex Pattern Match — try_regex_match","text":"","code":"try_regex_match(name)"},{"path":"https://teal-insights.github.io/r-econid/reference/try_regex_match.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Try Regex Pattern Match — try_regex_match","text":"name Character string economy name code","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/try_regex_match.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Try Regex Pattern Match — try_regex_match","text":"Character vector economy_ids","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/validate_economy_inputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate inputs for economy standardization — validate_economy_inputs","title":"Validate inputs for economy standardization — validate_economy_inputs","text":"Validates input data frame column names economy standardization.","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/validate_economy_inputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate inputs for economy standardization — validate_economy_inputs","text":"","code":"validate_economy_inputs(data, name_col_name, code_col_name, output_cols)"},{"path":"https://teal-insights.github.io/r-econid/reference/validate_economy_inputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate inputs for economy standardization — validate_economy_inputs","text":"data data frame tibble validate name_col_name Name column containing economy names code_col_name Optional name column containing economy codes output_cols Character vector requested output columns","code":""},{"path":"https://teal-insights.github.io/r-econid/reference/validate_economy_inputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate inputs for economy standardization — validate_economy_inputs","text":"List containing validated output_cols final_cols","code":""}]
